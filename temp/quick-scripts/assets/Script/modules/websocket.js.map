{"version":3,"sources":["websocket.js"],"names":["ProtoManager","require","websocket","sock","is_connected","receiveDate","connect","url","WebSocket","binaryType","onopen","on_open","bind","onmessage","on_message","onerror","on_error","onclose","on_close","event","console","log","buf","data","hinfo","readHeaderInfo","decodeMsg","ctype","close","send_msg","body","send","module","exports"],"mappings":";;;;;;AAAA,IAAMA,eAAeC,QAAQ,cAAR,CAArB;AACA,IAAIC,YAAY;AACZC,UAAK,IADO;AAEZC,kBAAa,KAFD;AAGZC,iBAAY,IAHA;AAIZC,aAAS,iBAASC,GAAT,EAAc;AACnB,aAAKJ,IAAL,GAAY,IAAIK,SAAJ,CAAcD,GAAd,CAAZ;AACA,aAAKJ,IAAL,CAAUM,UAAV,GAAuB,aAAvB;AACA,aAAKN,IAAL,CAAUO,MAAV,GAAmB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAnB;AACA,aAAKT,IAAL,CAAUU,SAAV,GAAsB,KAAKC,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAtB;AACA,aAAKT,IAAL,CAAUY,OAAV,GAAoB,KAAKC,QAAL,CAAcJ,IAAd,CAAmB,IAAnB,CAApB;AACA,aAAKT,IAAL,CAAUc,OAAV,GAAoB,KAAKC,QAAL,CAAcN,IAAd,CAAmB,IAAnB,CAApB;AACH,KAXW;AAYZD,aAAQ,iBAASQ,KAAT,EAAe;AACnBC,gBAAQC,GAAR,CAAY,MAAZ;AACA,aAAKjB,YAAL,GAAoB,IAApB;AAEH,KAhBW;AAiBZU,gBAAW,oBAASK,KAAT,EAAe;AACtBC,gBAAQC,GAAR,CAAY,QAAZ;AACA,YAAIC,MAAMH,MAAMI,IAAhB;AACA,YAAIC,QAAQxB,aAAayB,cAAb,CAA4BH,GAA5B,CAAZ,CAHsB,CAGwB;AAC9C,aAAKjB,WAAL,GAAoBL,aAAa0B,SAAb,CAAuBF,KAAvB,EAA6BF,GAA7B,CAApB,CAJsB,CAIiC;AACvD,YAAGE,MAAMG,KAAN,IAAe,CAAlB,EAAoB;AAChBP,oBAAQC,GAAR,CAAY,YAAZ;AACAD,oBAAQC,GAAR,CAAY,KAAKhB,WAAjB;AACH,SAHD,MAII;AACAe,oBAAQC,GAAR,CAAY,KAAKhB,WAAjB;AACH;AAEJ,KA9BW;AA+BZW,cAAS,kBAASG,KAAT,EAAe;AACpB;AACA,aAAKS,KAAL;AACH,KAlCW;AAmCZV,cAAU,kBAASC,KAAT,EAAgB;AACtB,YAAI,KAAKhB,IAAT,EAAe;AACX,iBAAKyB,KAAL;AACH;AACJ,KAvCW;AAwCZA,WAAO,iBAAW;AACd,aAAKxB,YAAL,GAAoB,KAApB;AACA,YAAI,KAAKD,IAAL,KAAc,IAAlB,EAAwB;AACpB,iBAAKA,IAAL,CAAUyB,KAAV;AACA,iBAAKzB,IAAL,GAAY,IAAZ;AACH;AACJ,KA9CW;AA+CZ0B,cAAS,kBAASC,IAAT,EAAc;AACnB,YAAI,CAAC,KAAK3B,IAAN,IAAc,CAAC,KAAKC,YAAxB,EAAsC;AAClCgB,oBAAQC,GAAR,CAAY,QAAZ;AACA;AACH;AACD,aAAKlB,IAAL,CAAU4B,IAAV,CAAeD,IAAf;AACAV,gBAAQC,GAAR,CAAY,QAAZ;AACH;;AAtDW,CAAhB;AAyDA;AACAW,OAAOC,OAAP,GAAiB/B,SAAjB","file":"websocket.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\modules","sourcesContent":["const ProtoManager = require(\"protoManager\");\r\nvar websocket = {\r\n    sock:null,\r\n    is_connected:false,\r\n    receiveDate:null,\r\n    connect: function(url) {\r\n        this.sock = new WebSocket(url);\r\n        this.sock.binaryType = \"arraybuffer\";\r\n        this.sock.onopen = this.on_open.bind(this);\r\n        this.sock.onmessage = this.on_message.bind(this);\r\n        this.sock.onerror = this.on_error.bind(this);\r\n        this.sock.onclose = this.on_close.bind(this);\r\n    },\r\n    on_open:function(event){\r\n        console.log(\"连接成功\");\r\n        this.is_connected = true;\r\n       \r\n    },\r\n    on_message:function(event){\r\n        console.log(\"我收到信息了\");\r\n        let buf = event.data\r\n        let hinfo = ProtoManager.readHeaderInfo(buf); // 读头\r\n        this.receiveDate =  ProtoManager.decodeMsg(hinfo,buf); // 判断头然后解析数据\r\n        if(hinfo.ctype == 2){\r\n            console.log(\"我收到的是登录结果:\");\r\n            console.log(this.receiveDate);\r\n        }\r\n        else{\r\n            console.log(this.receiveDate);\r\n        }\r\n       \r\n    },\r\n    on_error:function(event){\r\n        // console.log(event);\r\n        this.close();\r\n    },\r\n    on_close: function(event) {\r\n        if (this.sock) {\r\n            this.close();\r\n        }\r\n    }, \r\n    close: function() {\r\n        this.is_connected = false;\r\n        if (this.sock !== null) {\r\n            this.sock.close();\r\n            this.sock = null;\r\n        }\r\n    },\r\n    send_msg:function(body){\r\n        if (!this.sock || !this.is_connected) {\r\n            console.log(\"信息发送失败\");\r\n            return;\r\n        }\r\n        this.sock.send(body);\r\n        console.log(\"信息发送成功\");\r\n    }\r\n    \r\n};\r\n// websocket.connect(\"ws://192.168.0.50:7081\");\r\nmodule.exports = websocket;\r\n\r\n\r\n\r\n"]}