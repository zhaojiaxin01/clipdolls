{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\protobuf/assets\\Script\\protobuf\\protoManager.js"],"names":["PackageReader","require","PackageWriter","HeaderInfo","HEADER_SIZE","ProtoManager","data","length","pkgReader","headerInfo","ctype","readInt32","utag","readUInt32","dataType","readInt8","stype","key","body","buf","encodeJsonMsg","arrbuffer","msgObg","decodeJsonMsg","encodeBuffMsg","jsonStr","JSON","stringify","totalLen","utf8StrLength","ArrayBuffer","pkgWriter","writeHeaderInfo","writeUTF8Str","position","readUTF8Str","parse","e","console","error","getKey","encoder","encoders","dataview","DataView","decoder","decoders","log","encode_func","warn","decode_func","dataBuf","writeUtag","removeUtag","module","exports"],"mappings":"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","file":"protoManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\protobuf","sourcesContent":["const PackageReader = require(\"packageReader\");\r\nconst PackageWriter = require(\"packageWriter\");\r\nconst HeaderInfo = require(\"headerInfo\");\r\nconst HEADER_SIZE = 9;\r\n\r\n\r\nclass ProtoManager {\r\n    /**\r\n     * @private\r\n     * @param {*} arrbuffer \r\n     */\r\n    // 解码数据头\r\n    static readHeaderInfo(data) {\r\n        if (data.length < HEADER_SIZE) {\r\n            return null\r\n        }\r\n        let pkgReader = new PackageReader(data);\r\n        let headerInfo = new HeaderInfo();\r\n        headerInfo.ctype = pkgReader.readInt32();\r\n        headerInfo.utag = pkgReader.readUInt32();\r\n        headerInfo.dataType = pkgReader.readInt8();\r\n        return headerInfo;\r\n    }\r\n    \r\n    static getKey(stype,ctype){\r\n        let key =  stype * 65536 +ctype;\r\n        return key;\r\n    }\r\n\r\n    static encodeMsg(headerInfo,body){\r\n        let buf;\r\n        switch(headerInfo.dataType){\r\n            case 0:\r\n            buf = ProtoManager.encodeJsonMsg(headerInfo,arrbuffer);\r\n            break;\r\n            case 1:\r\n            buf = ProtoManager.encodeJsonMsg(headerInfo,arrbuffer);\r\n            break;\r\n        }\r\n        return buf;\r\n    }\r\n \r\n    static decodeMsg(headerInfo,buf){\r\n        let msgObg;\r\n        switch(headerInfo.dataType){\r\n            case 0:\r\n            msgObg = ProtoManager.decodeJsonMsg(headerInfo,buf);\r\n            break;\r\n            case 1:\r\n            msgObg = ProtoManager.encodeBuffMsg(headerInfo,buf);\r\n            break;\r\n        }\r\n        return msgObg;\r\n    }\r\n    // json编码\r\n      /**\r\n     *\r\n     * @param headerInfo\r\n     * @param body\r\n     * @return {Buffer}\r\n     * @private\r\n     */\r\n    static encodeJsonMsg(headerInfo, body) {\r\n        let jsonStr = JSON.stringify(body);\r\n        let totalLen = HEADER_SIZE + 2 + jsonStr.utf8StrLength();\r\n        let arrbuffer = new ArrayBuffer(totalLen);\r\n        let pkgWriter = new PackageWriter(arrbuffer);\r\n        pkgWriter.writeHeaderInfo(headerInfo);\r\n        pkgWriter.writeUTF8Str(jsonStr);\r\n        return arrbuffer;\r\n    }\r\n\r\n    // json解码\r\n     /**\r\n     *\r\n     * @param headerInfo\r\n     * @param buf\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    static decodeJsonMsg(headerInfo, buf) {\r\n        let body;\r\n        let pkgReader = new PackageReader(buf);\r\n        pkgReader.position = HEADER_SIZE;\r\n        let jsonStr = pkgReader.readUTF8Str();\r\n        try {\r\n            //todo:看情况决定是否取消数组模式\r\n            body = JSON.parse(jsonStr);\r\n        } catch (e) {\r\n            console.error(\"JSON消息解码错误:\", e);\r\n        }\r\n        return body;\r\n    }\r\n// \r\n    // buf编码\r\n    static encodeBuffMsg(headerInfo, body) {\r\n        var buf = null;\r\n       let key = ProtoManager.getKey(headerInfo.stype,headerInfo.ctype);\r\n       let encoder = ProtoManager.encoders[key];\r\n       if(!encoder){\r\n           return null;\r\n       }\r\n       buf = encoder(headerInfo, body);\r\n       return buf;\r\n    }\r\n\r\n    // buf解码\r\n    static decodeBuffMsg(headerInfo,arrbuffer){\r\n        var dataview = new DataView(arrbuffer);\r\n        let key = ProtoManager.getKey(headerInfo.stype, headerInfo.ctype);\r\n        \r\n        let decoder = ProtoManager.decoders[key];\r\n        if (!decoder) {\r\n            return null;\r\n        }\r\n        console.log(\"我在解码buffer\")\r\n        return decoder(dataview);\r\n    }\r\n\r\n    static regEncoder(stype, ctype, encode_func) {\r\n        let key = ProtoManager.getKey(stype, ctype);\r\n        if (ProtoManager.encoders[key]) {\r\n            log.warn(\"stype: \" + stype + \" ctype: \" + ctype + \"the encoder is reged!\");\r\n        }\r\n        ProtoManager.encoders[key] = encode_func;\r\n    }\r\n \r\n    static regDecoder(stype,ctype,decode_func){\r\n        let key = ProtoManager.getKey(stype, ctype);\r\n        if (ProtoManager.decoders[key]) {\r\n            log.warn(\"stype: \" + stype + \" ctype: \" + ctype + \"the decoder is reged!\");\r\n        }\r\n        ProtoManager.decoders[key] = decode_func;\r\n    }\r\n\r\n    static writeUtag(dataBuf, utag) {\r\n        return PackageWriter.writeUtag(dataBuf, utag);\r\n    }\r\n\r\n    static removeUtag(dataBuf) {\r\n        return PackageWriter.removeUtag(dataBuf);\r\n    }\r\n   \r\n   \r\n\r\n}\r\n// /**\r\n//  *\r\n//  * @type {{function(Buffer)}}\r\n//  * @private\r\n//  */\r\nProtoManager.encoders = {};\r\nProtoManager.decoders = {};\r\nmodule.exports = ProtoManager;"]}